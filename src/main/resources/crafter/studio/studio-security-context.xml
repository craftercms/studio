<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2021 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License version 3 as published by
  ~ the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:ldap="http://www.springframework.org/schema/ldap"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/ldap
        http://www.springframework.org/schema/ldap/spring-ldap.xsd">

    <security:http pattern="/**"
                   entry-point-ref="studioLoginUrlAuthenticationEntryPoint"
                   authentication-manager-ref="studioAuthenticationManager"
                   access-decision-manager-ref="studioAccessDecisionManager">
        <security:access-denied-handler ref="studioAccessDeniedHandler"/>
        <security:anonymous enabled="true"/>
        <security:headers disabled="true"/>
        <security:csrf disabled="true"/>
        <security:custom-filter ref="studioAuthenticationTokenProcessingFilter" position="PRE_AUTH_FILTER" />
        <security:intercept-url request-matcher-ref="publicUrlMatcher" access="permitAll()"/>
        <security:intercept-url pattern="/login" access="permitAll()"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()" />
        <security:form-login login-page="/login"
                             authentication-success-handler-ref="studioRedirectAuthenticationSuccessHandler"/>
        <security:custom-filter position="LOGOUT_FILTER" ref="logoutFilter"/>
        <security:custom-filter position="LAST" ref="cstudioUrlRestrictionFilter"/>
    </security:http>

    <bean id="publicUrlMatcher" class="org.craftercms.studio.impl.v2.utils.spring.security.OrRegexRequestMatcher">
        <constructor-arg value="#{studioConfiguration.getProperty(T(org.craftercms.studio.api.v2.utils.StudioConfiguration).SECURITY_PUBLIC_URLS)}"/>
    </bean>

    <bean id="studioLoginUrlAuthenticationEntryPoint"
          class="org.craftercms.studio.impl.v1.web.security.access.StudioLoginUrlAuthenticationEntryPoint">
        <constructor-arg name="loginFormUrl" value="/login" />
    </bean>

    <bean id="studioAuthenticationTokenProcessingFilter"
          class="org.craftercms.studio.impl.v1.web.security.access.StudioAuthenticationTokenProcessingFilter" init-method="init">
        <property name="securityService" ref="cstudioSecurityService"/>
        <property name="userDetailsManager" ref="studioUserDetailsManager"/>
        <property name="studioConfiguration" ref="studioConfiguration" />
    </bean>

    <security:authentication-manager id="studioAuthenticationManager">
        <security:authentication-provider ref="studioAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="studioAuthenticationProvider" class="org.craftercms.studio.impl.v1.web.security.access.StudioAuthenticationProvider"/>

    <bean id="studioUserDetailsManager" class="org.craftercms.studio.impl.v1.service.security.UserDetailsManagerImpl">
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <bean id="studioAccessDecisionManager" class="org.craftercms.studio.impl.v1.web.security.access.StudioAccessDecisionManager" >
        <constructor-arg name="decisionVoters">
            <list>
                <!-- Default Spring Voters for <security:intercept-url> expressions -->
                <bean class="org.springframework.security.web.access.expression.WebExpressionVoter"/>
                <bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
                <bean class="org.springframework.security.access.vote.RoleVoter"/>
                <!-- Custom Studio Voters -->
                <bean class="org.craftercms.studio.impl.v1.web.security.access.StudioSiteAPIAccessDecisionVoter" parent="studioAbstractAccessDecisionVoter" />
                <bean class="org.craftercms.studio.impl.v1.web.security.access.StudioPublishingAPIAccessDecisionVoter" parent="studioAbstractAccessDecisionVoter" />
                <bean class="org.craftercms.studio.impl.v1.web.security.access.StudioUserAPIAccessDecisionVoter" parent="studioAbstractAccessDecisionVoter" />
                <bean class="org.craftercms.studio.impl.v1.web.security.access.StudioGroupAPIAccessDecisionVoter" parent="studioAbstractAccessDecisionVoter" />
                <bean class="org.craftercms.studio.impl.v1.web.security.access.StudioCmisDSAPIAccessDecisionVoter" parent="studioAbstractAccessDecisionVoter" />
                <bean class="org.craftercms.studio.impl.v1.web.security.access.StudioWorkflowAPIAccessDecisionVoter" parent="studioAbstractAccessDecisionVoter" />
                <bean class="org.craftercms.studio.impl.v1.web.security.access.StudioContentAPIAccessDecisionVoter" parent="studioAbstractAccessDecisionVoter" />
                <bean class="org.craftercms.studio.impl.v1.web.security.access.StudioGeneralAccessDecisionVoter" parent="studioAbstractAccessDecisionVoter" />
            </list>
        </constructor-arg>
    </bean>

    <bean id="studioAbstractAccessDecisionVoter" class="org.craftercms.studio.impl.v1.web.security.access.StudioAbstractAccessDecisionVoter" abstract="true">
        <property name="studioConfiguration" ref="studioConfiguration" />
        <property name="siteService" ref="cstudioSiteServiceSimple" />
        <property name="securityService" ref="cstudioSecurityService" />
        <property name="userServiceInternal" ref="userServiceInternal" />
    </bean>

    <bean id="studioAccessDeniedHandler" class="org.craftercms.studio.impl.v1.web.security.access.StudioAccessDeniedHandler">
    </bean>

    <bean id="studioRedirectAuthenticationSuccessHandler"
          class="org.craftercms.studio.impl.v1.web.security.access.StudioRedirectAuthenticationSuccessHandler">
        <property name="targetUrlParameter" value="redirect"/>
    </bean>

    <!-- CSRF -->
    <bean id="crafter.csrfTokenRepository" class="org.springframework.security.web.csrf.CookieCsrfTokenRepository">
        <property name="cookieHttpOnly" value="false"/>
    </bean>

    <bean id="crafter.csrfFilter" class="org.springframework.security.web.csrf.CsrfFilter">
        <constructor-arg ref="crafter.csrfTokenRepository"/>
    </bean>

    <bean id="csrfLogoutHandler" class="org.springframework.security.web.csrf.CsrfLogoutHandler">
        <constructor-arg ref="crafter.csrfTokenRepository"/>
    </bean>

    <!-- Permissions -->
    <bean id="crafter.studioSubjectResolver" class="org.craftercms.studio.permissions.SubjectResolverImpl">
        <property name="securityService" ref="cstudioSecurityService"/>
    </bean>

    <bean id="crafter.studioPermissionResolver" class="org.craftercms.studio.permissions.PermissionResolverImpl">
        <property name="securityService" ref="cstudioSecurityService"/>
        <property name="studioConfiguration" ref="studioConfiguration" />
    </bean>

    <bean id="crafter.studioCompositePermissionResolver"
          class="org.craftercms.studio.permissions.CompositePermissionResolverImpl">
        <property name="securityService" ref="cstudioSecurityService"/>
        <property name="studioConfiguration" ref="studioConfiguration" />
    </bean>

    <bean id="crafter.studioPermissionEvaluator" class="org.craftercms.commons.security.permissions.impl.PermissionEvaluatorImpl">
        <property name="subjectResolver" ref="crafter.studioSubjectResolver"/>
        <property name="permissionResolver" ref="crafter.studioPermissionResolver"/>
    </bean>

    <bean id="crafter.studioCompositePermissionEvaluator"
          class="org.craftercms.commons.security.permissions.impl.PermissionEvaluatorImpl">
        <property name="subjectResolver" ref="crafter.studioSubjectResolver"/>
        <property name="permissionResolver" ref="crafter.studioCompositePermissionResolver"/>
    </bean>

    <bean id="crafter.HasPermissionAnnotationHandler" class="org.craftercms.commons.security.permissions.annotations.HasPermissionAnnotationHandler">
        <property name="permissionEvaluators">
            <map>
                <entry key="org.craftercms.commons.security.permissions.DefaultPermission" value-ref="crafter.studioPermissionEvaluator"/>
                <entry key="org.craftercms.studio.permissions.CompositePermission"
                       value-ref="crafter.studioCompositePermissionEvaluator"/>
            </map>
        </property>
    </bean>

    <!-- Authentication chain -->
    <bean id="crafter.studioAuthenticationChain"
          class="org.craftercms.studio.impl.v2.service.security.AuthenticationChainImpl" init-method="init">
        <property name="groupDao" ref="groupDAO" />
        <property name="studioConfiguration" ref="studioConfiguration" />
        <property name="userDao" ref="userDAO" />
        <property name="userServiceInternal" ref="userServiceInternal" />
        <property name="auditServiceInternal" ref="auditServiceInternal" />
        <property name="siteService" ref="cstudioSiteServiceSimple" />
    </bean>

    <!-- CORS -->
    <bean id="crafter.corsConfigSource" class="org.craftercms.commons.spring.cors.FixedCorsConfigurationSource">
        <constructor-arg name="disableCORS" value="#{studioConfiguration.getProperty('studio.cors.disable')}"/>
        <constructor-arg name="allowOrigins" value="#{studioConfiguration.getProperty('studio.cors.origins')}"/>
        <constructor-arg name="allowMethods" value="#{studioConfiguration.getProperty('studio.cors.headers')}"/>
        <constructor-arg name="allowHeaders" value="#{studioConfiguration.getProperty('studio.cors.methods')}"/>
        <constructor-arg name="allowCredentials" value="#{studioConfiguration.getProperty('studio.cors.credentials')}"/>
        <constructor-arg name="maxAge" value="#{studioConfiguration.getProperty('studio.cors.maxage')}"/>
    </bean>

    <bean id="crafter.corsFilter" class="org.springframework.web.filter.CorsFilter">
        <constructor-arg ref="crafter.corsConfigSource"/>
    </bean>

    <!-- Secure Headers -->

    <bean id="crafter.secureHeaderWriterFilter"
          class="org.craftercms.engine.util.spring.security.ConditionalHeaderWriterFilter">
        <constructor-arg value="#{studioConfiguration.getProperty('studio.security.headers.enabled')}"/>
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.header.writers.CacheControlHeadersWriter"/>
                <bean class="org.springframework.security.web.header.writers.HstsHeaderWriter"/>
                <bean class="org.springframework.security.web.header.writers.XXssProtectionHeaderWriter"/>
                <bean class="org.springframework.security.web.header.writers.frameoptions.XFrameOptionsHeaderWriter">
                    <constructor-arg value="SAMEORIGIN"/>
                </bean>
                <bean class="org.springframework.security.web.header.writers.XContentTypeOptionsHeaderWriter"/>
            </list>
        </constructor-arg>
    </bean>

    <!-- Logout -->
    <bean id="logoutFilter" class="org.craftercms.studio.impl.v1.web.security.access.StudioLogoutFilter">
        <constructor-arg ref="cstudioSecurityService"/>
        <constructor-arg ref="logoutSuccessHandler"/>
        <constructor-arg>
            <list>
                <ref bean="csrfLogoutHandler"/>
                <ref bean="securityContextLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/api/1/services/api/1/security/logout.json"/>
    </bean>

    <bean id="logoutSuccessHandler"
          class="org.craftercms.studio.impl.v1.web.security.access.StudioLogoutSuccessHandler"/>

    <bean id="securityContextLogoutHandler"
          class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>

</beans>
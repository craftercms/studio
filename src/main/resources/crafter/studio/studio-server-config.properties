##########################
# Database configuration #
##########################
# Defines database DBMS platform used for crafter database. Supported values:
#   derby
#   mysql
#   postgres
#   oracle
#   sqlserver
# If value is not specified application will not startup.
studio.db.platform=derby
# Name of crafter database.
studio.db.name=CRAFTER
# Username used for authentication to access crafter database.
studio.db.username=crafter
# Password used for authentication to access crafter database.
studio.db.password=crafter
# JDBC driver and Java class used for accessing crafter database.
studio.db.driver=org.apache.derby.jdbc.EmbeddedDriver
# Defines folder where database files are stored when using embedded derby as DBMS (default DBMS).
studio.db.derby.path=./data/derby/${studio.db.name}
# Connection string used when connecting database with JDBC driver.
studio.db.url=jdbc:derby:${studio.db.derby.path};databaseName=${studio.db.name};create=true;user=${studio.db.username};password=${studio.db.password}
# Defines initial number of database connections in database connection pool.
studio.db.pool.initialConnections=10
# Defines maximum number of active database connections in database connection pool.
studio.db.pool.maxActiveConnections=100
# Defines maximum number of idle database connections to retain in database connection pool.
studio.db.pool.maxIdleConnections=30
# Defines minimum number of idle database connections to retain in database connection pool.
studio.db.pool.minIdleConnections=10
# Defines maximum waiting time for a database connection to become available (value is in milliseconds).
studio.db.pool.maxWaitTime=10000
# Turn database initializer on (value true) or off (value false).
# When initializer is turned off, system will not try to initialize database on startup.
# When system is starting for the first time initializer must be turned on. When database already exists, initializer can be turned off for faster startup. If database is deleted or dropped for any reason, initializer needs to be turned on.
studio.db.initializer.enabled=false
# Test database connections retrieved from the pool before being used (value true).
# If value is set to false database connection will not be tested before being used.
studio.db.testOnBorrow=true
# The SQL query to validate the connection for MS SQL Server.
studio.db.validationQuery.sqlserver=SELECT 1
# The SQL query to validate the connection for Postgres.
studio.db.validationQuery.postgres=SELECT 1
# The SQL query to validate the connection for MySQL.
studio.db.validationQuery.mysql=SELECT 1
# The SQL query to validate the connection for Oracle
studio.db.validationQuery.oracle=SELECT 1 FROM DUAL
# The SQL query to validate the connection for Derby
studio.db.validationQuery.derby=SELECT 1 FROM SYSIBM.SYSDUMMY1
# The SQL query to validate the connection for DB2
studio.db.validationQuery.db2=SELECT 1 FROM SYSIBM.SYSDUMMY1
# Defines the amount of time, in seconds, that connection validation will wait for a response from the database when executing a validation query.
# Use a value less than or equal to 0 for no timeout.
studio.db.validationInterval=34000

########################
# Environment settings #
########################
# Defines name used for environment specific configuration. It is used for environment overrides in studio. Default value is local.
environment=local
environmentConfig.environment=local

############################
# Repository configuration #
############################
# Defines repository type used for storing content. Possible values:
#   default (disk repository)
#   alfrescoext (alfresco with improved caching and performance)
repositoryType=default
# Defines security provider for accessing repository. Possible values:
#   default (basic provider with 3 users - admin, author, approver)
#   file (users are stored in XML file)
#   alfrescoext (alfresco users and groups are used for authentication)
securityType=default
# Path to the folder that is used as root for disk repository.
repository.diskImplementation.path=./crafter/data/repo
# Location of XML file that contains users for demo security provider.
crafter.studio.security.file.configLocation=${repository.diskImplementation.path}/security-config.xml
# Base URL to use to access alfresco when configured alfresco repository and alfresco security provider.
alfrescoUrl=http://127.0.0.1:8080/alfresco
# Use https with alfresco
alfresco.useSSL=false
# Keystore location for alfresco SSL certificates
alfresco.keystoreFile=./data/keystore/ssl.keystore
# Keystore password
alfresco.keystorePass=kT9X6oe68t
# Keystore type
alfresco.keystoreType=JCEKS
# Turn content repository bootstrap on (value true) or off (value false).
crafter.repository.bootstrapEnabled=true
# Location where preview content is stored. It is used with alfrescoext repository type to improve performance.
crafter.repository.previewRootPath=./crafter/data/repo
# Defines size of a batch when rebuilding crafter repository metadata stored in database.
crafter.repository.rebuildMetadata.batchSize=100

##########################
# Services Configuration #
##########################
# Location where site configuration is stored in content repository.
serviceConfig.configPath=/cstudio/config/sites/{site}
# File name where site configuration is stored.
serviceConfig.configFileName=site-config.xml

######################################
# Dependencies Service configuration #
######################################
# Defines paths that will be excluded from dependency rules. Common usage is for files that are not site content themselves, but are system or files packaged with engine.
# Valid values are regular expressions and for multiple regular expressions, they are separated by comma (,).
dmDependenciesService.ignoreDependenciesRules=/templates/system/common/cstudio-support.*\\.ftl,/templates/web/navigation/.*\\.ftl
# Turn on (value true) or off (value false) manual approving for dependencies when publishing content.
# When turned on, dependencies service does not perform check if deployment package includes all necessary dependencies for content that is being published.
dmDependenciesService.enableManualDependencyApproving=false
################################
# Content Type Filter patterns #
################################
# Define dashboard filter pattern for pages. Value is regular expression executed against content path.
cstudioPagesFilter.includePattern=^/page/.*
# Define dashboard filter pattern for components. Value is regular expression executed against content path.
cstudioComponentsFilter.includePattern=^/component/.*
# # Define dashboard filter pattern for documents. Value is regular expression executed against content path.
cstudioDocumentsFilter.includePattern=^/document.*

#####################################
# Permissions Service configuration #
#####################################
# Location where permission service configuration files are stored for a site.
permissionService.configPath=/cstudio/config/sites/{site}
# File name where configuration of user role mappings is stored for a site.
permissionService.roleMappingFileName=role-mappings-config.xml
# File name where configuration of user permissions mappings is stored for a site.
permissionService.permissionMappingFileName=permission-mappings-config.xml
# Location where permission service global configuration files are stored.
permissionService.globalConfigPath=/cstudio/config
# File name where global configuration of user role mappings is stored.
permissionService.globalRoleMappingFileName=global-role-mappings-config.xml
# File name where global configuration of user permissions mappings is stored.
permissionService.globalPermissionMappingFileName=global-permission-mappings-config.xml


######################################
# Content Type Service configuration #
######################################
# Location where content types configuration files are stored for a site.
contentTypesConfig.configPath=/cstudio/config/sites/{site}/content-types/{content-type}
# File name where configuration of content type is stored.
contentTypesConfig.configFileName=config.xml
# Location where content types are stored for a site.
contentTypeService.configPath=/cstudio/config/sites/{site}/content-types
# File name where configuration of content type is stored.
contentTypeService.configFileName=config.xml

##################################
# Activity Service configuration #
##################################
# Turn off (value false) case sensitive user names.
user.name.caseSensitive=false

####################################
# Content Processors configuration #
####################################
# Location where groovy script for metadata extraction processor is stored.
ExtractMetadataProcessor.scriptLocation=/cstudio/config/sites/{site}/content-types/{content-type}/extract.groovy
# Location where groovy script for content lifecycle processor is stored.
ContentLifeCycleProcessor.scriptLocation=/cstudio/config/sites/{site}/content-types/{content-type}/controller.groovy
# Path pattern where system assets are stored.
AssetsContentProccessot.assetsSystemPath=/static-assets/system

###############################################
# Page Navigation Order Service configuration #
###############################################
# Defines base increment for page navigation order when new content is created.
PageNavigationOrderService.increment=1000

##############################
# Site Service configuration #
##############################
# Root location where configuration for all sites is stored inside repository.
siteService.sitesConfigPath=/cstudio/config/sites
# Location where global configuration files are stored.
siteService.configPath=/cstudio/config

##########################################
# Site Environment Service configuration #
##########################################
# Location pattern where environment specific configuration for a site is stored
environmentConfig.configPath=/cstudio/config/sites/{site}/environment-overrides/{environment}
# File name where environment specific configuration is stored
environmentConfig.configFileName=environment-config.xml

####################################
# Deployment Service configuration #
####################################
# Location where deployment configuration is stored for a site.
deploymentConfig.configPath=/cstudio/config/sites/{site}/deployment
# File name where deployment endpoints configuration is stored.
deploymentConfig.configFileName=endpoints-config.xml

##################################
# Workflow Service configuration #
##################################
# Turn on/off (value true/false) publishing without dependencies.
# When turned on workflow service does not perform check if deployment package includes all necessary dependencies for content that is being published.
workflowService.enablePublishingWithoutDependencies=false

######################################
# Notification Service configuration #
######################################
# Location where notification service configuration is stored for a site.
notificationService.configPath=/cstudio/config/sites/{site}
# File name where simple notification service configuration is stored.
notificationService.configFileName=notification-config.xml
# File name where custom notification service configuration is stored.
notificationService.v2.configFileName=workflow-messaging-config.xml
# Turn on/off (value true/false) custom notification service.
notificationService.v2.enable=false
# Set timezone used for custom notification service.
notificationService.v2.timezone=UTC
# Turn on/off (value true/false) notifications for custom content path patterns.
notificationService.customContentPathNotification=false
# Defines regular expression to enable notifications for custom content paths.
notificationService.customContentPathNotificationPattern=

####################################
# Crafter Default Preview Deployer #
####################################
# Server name for default preview deployer
crafter.deployer.server=localhost
# Port number for default preview deployer
crafter.deployer.port=9191
# Target name for default preview deployer
crafter.deployer.target=sample
# Password for default preview deployer
crafter.deployer.password=admin

###################################
# Environment Store configuration #
###################################
# Location where environment stores (golden copies) for all sites will be stored.
crafter.deployer.environmentStoreRoot=crafter-environments-store

####################################
# Publishing Manager configuration #
####################################
# Defines file name for index files (page containers). Default value is index.xml
publishingManager.indexFile=index.xml
# Turn on/off (value true/false) import mode for deployment engine. When import mode enabled, deployment engine does not create versions for content files.
publishingManager.importModeEnabled=false
# Turn on/off (value true/false) publishing without dependencies.
# When turned on, deployment engine does not check for missing mandatory dependencies of published content.
publishingManager.enablePublishingWithoutDependencies=false

################################
# Repository Job configuration #
################################
# Password which repository job uses to authenticate against repository
repositoryJob.password=root
# User name which repository job uses to authenticate against repository
repositoryJob.username=admin

###################################################
# Deploy Content To Environment Job configuration #
###################################################
# Defines chunk size for big deployment packages. Deployment package is divide and processed in chunks of specified size.
deployContentToEnvironmentJob.processingChunkSize=1000
# Turn on/off (value true/false) check if mandatory dependencies of deployed content are included in deployment package.
deployContentToEnvironmentJob.mandatoryDependenciesCheckEnabled=true

##########################################################
# Publish Content To Deployment Target Job Configuration #
##########################################################
# Defines maximum number of retries in case of failure when synchronizing deployment target with published content.
syncTargetsJob.maxTolerableRetries=30

#################################
# Deployment Jobs configuration #
#################################
# Defines master publishing node in clustered environment. Value false disables publishing (even in non-clustered environment).
deploymentWorkers.masterPublishingNode=true

###############################
# Email Service configuration #
###############################
# Default value for from header when sending emails.
crafter.studio.mail.from.default=default@mail.com
# SMTP server name to send emails.
crafter.studio.mail.host=localhost
# SMTP port number to send emails.
crafter.studio.mail.port=25
# SMTP username for authenticated access when sending emails.
crafter.studio.mail.username=
# SMTP password for authenticated access when sending emails.
crafter.studio.mail.password=
# Turn on/off (value true/false) SMTP authenaticated access protocol.
crafter.studio.mail.smtp.auth=false
# Enable/disable (value true/false) SMTP TLS protocol when sending emails.
crafter.studio.mail.smtp.starttls.enable=true
# Enable/disable (value true/false) SMTP EHLO protocol when sending emails.
crafter.studio.mail.smtp.ehlo=true
# Enable/disable (value true/false) debug mode for email service. Enabling debug mode allows tracking/debugging communication between email service and SMTP server.
crafter.studio.mail.debug=false

#######################################
# Studio Groovy Scripts configuration #
#######################################
# Classpath to be used for studio's scripting engine.
crafter.studio.scripts.groovy.classpath=${crafter-studio}/default-site

#############################
# Studio Ebus configuration #
#############################
# Defines list of studio peers/nodes in clustered environment. Values are separated by comma (,).
crafter.studio.ebus.peers=
# Port number which will be used for communication between nodes in clustered environment.
crafter.studio.ebus.tcpserver.port=19191

################################
# Import Service configuration #
################################
# Defines content processor chain name used for processing xml content.
importService.xmlChainName=importContent
# Defines content processor chain name used for processing assets.
importService.assetChainName=assetContent
# Defines content processor workflow assignee for import process.
importService.assignee=admin

######################################
# Object State Service configuration #
######################################
# Defines size of a batch when executing object state operation on big path packages (bulk operations). Limitation on bulk operations is imposed by jdbc drivers and limits on number of parameters for sql statements.
objectStateService.bulkOperationsBatchSize=500

################################
# Studio Cluster configuration #
################################
# Turn on/off (value true/false) crafter studio cluster.
crafter.studio.cluster.enabled=false

############################
# Studio SSO configuration #
############################
# If SSO is enabled
crafter.studio.sso.enabled=false
# The name of the SSO header
crafter.studio.sso.headerName=X-Remote-User
# The regular expression used to extract the actual username. The first group will be the actual username
crafter.studio.sso.username.pattern=
# The name of the Alfresco External Authentication header that should be used on calls to the Alfresco API
crafter.studio.sso.alfresco.externalAuth.headerName=X-Alfresco-Remote-User

##########################
# Studio Security Filter #
##########################
# Urls to include in restriction for authenticated user only.
crafter.studio.security.urlsToInclude=/api/**
# Urls to exclude from restriction for authenticated user only.
crafter.studio.security.urlsToExclude=**,/**
# Urls to be treated as exception to the rules.
crafter.studio.security.exceptionUrls=/api/1/services/api/1/user/login.json,/api/1/services/api/1/user/logout.json,/api/1/services/api/1/server/get-available-languages.json,/api/1/services/api/1/server/get-ui-resource-override.json,/api/1/services/api/1/user/reset-password.json
# HTTP Session timeout for studio.
crafter.studio.security.sessionTimeout=60
# Public urls
crafter.studio.security.publicUrls=/api/1/services/api/1/user/login.json,/api/1/services/api/1/user/logout.json,/api/1/services/api/1/server/get-available-languages.json,/api/1/services/api/1/server/get-ui-resource-override.json,/api/1/services/api/1/user/reset-password.json

# Location pattern where dependency resolver specific configuration for a site is stored
crafter.studio.dependency.resolver.configBasePath=/cstudio/config/sites/{site}/dependency
# File name where dependency specific configuration is stored
crafter.studio.dependency.resolver.configFileName=resolver-config.xml
# Regex patterns for paths of item specific dependencies
crafter.studio.dependency.itemSpecificPattern=/site/components/page/.*,/static-assets/page/.*
# Force publishing of all dependencies if new or modified
crafter.studio.dependency.forceSoftDependencyPublish=false
<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2024 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License version 3 as published by
  ~ the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.craftercms.studio.api.v2.dal.DependencyDAO">

    <resultMap id="DependencyMap" type="org.craftercms.studio.api.v2.dal.Dependency">
        <id property="id" column="id"/>
        <result property="site" column="site"/>
        <result property="sourcePath" column="source_path"/>
        <result property="targetPath" column="target_path"/>
        <result property="type" column="type"/>
    </resultMap>

    <select id="getSoftDependenciesForList" resultType="java.util.Map">
        WITH RECURSIVE CTE AS (
                SELECT d.source_path, d.target_path, d.site
                FROM dependency d
                WHERE d.source_path IN
                        <foreach item="path" index="index" collection="paths"
                                 open="(" separator="," close=")">
                            #{path}
                        </foreach>
                AND d.site = #{siteId}
                AND d.valid = 1
            UNION
                SELECT d.source_path, d.target_path, d.site
                FROM cte, dependency d
                        WHERE cte.target_path = d.source_path
                AND d.site = #{siteId}
                AND cte.site = #{siteId}
                AND d.valid = 1
        )
        SELECT cte.source_path, cte.target_path
        FROM cte
            INNER JOIN site s ON s.site_id = cte.site
            INNER JOIN item i ON i.path = cte.target_path
            AND i.site_id = s.id
            AND s.deleted = 0
            AND (i.state &amp; #{modifiedMask}) > 0
            AND (i.state &amp; #{newMask}) = 0
            AND
            <foreach item="pattern" index="index" collection="regex"
                     open="(" separator=" OR " close=")">
                cte.target_path NOT RLIKE #{pattern}
            </foreach>
    </select>

    <select id="getHardDependenciesForList" parameterType="java.util.Map"
            resultType="java.util.Map">
        SELECT cd1.source_path, cd1.target_path
        FROM (dependency cd1
        INNER JOIN site s1 ON cd1.site = s1.site_id
        INNER JOIN item ci1 ON cd1.target_path = ci1.path AND s1.id = ci1.site_id
        )
        WHERE s1.site_id = #{site}
        AND s1.deleted = 0
        AND cd1.source_path IN
        <foreach item="path" index="index" collection="paths"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
        AND cd1.valid = 1
        AND (ci1.state &amp; #{newMask}) > 0
        UNION
        SELECT cd2.source_path, cd2.target_path
        FROM (dependency cd2 INNER JOIN site s2 ON cd2.site = s2.site_id INNER JOIN item ci2 ON cd2.target_path = ci2.path AND s2.id = ci2.site_id)
        WHERE s2.site_id = #{site}
        AND s2.deleted = 0
        AND cd2.valid = 1
        AND cd2.source_path IN
        <foreach item="path" index="index" collection="paths"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
        AND (ci2.state &amp; #{modifiedMask}) > 0
        AND (ci2.state &amp; #{newMask}) = 0
        AND
        <foreach item="pattern" index="index" collection="regex"
                 open="(" separator=" OR " close=")">
            cd2.target_path RLIKE #{pattern}
        </foreach>
    </select>

    <select id="getDependentItems" resultType="String">
        SELECT source_path
        FROM dependency
        WHERE site = #{siteId}
        AND valid = 1
        AND
        <foreach item="path" index="index" collection="paths"
                 open="(" separator=" OR " close=")">
            target_path LIKE CONCAT(TRIM(TRAILING '/' FROM #{path}), '/%') or target_path = #{path}
        </foreach>
    </select>

    <select id="getItemSpecificDependencies" parameterType="java.util.Map"
            resultType="String">
        SELECT target_path
        FROM dependency
        WHERE site = #{siteId}
        AND valid = 1
        AND source_path IN
        <foreach item="path" index="index" collection="paths"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
        AND
        <foreach item="pattern" index="index" collection="regex"
                 open="(" separator=" OR " close=")">
            target_path RLIKE #{pattern}
        </foreach>
    </select>

    <delete id="deleteItemDependencies" parameterType="java.util.Map">
        DELETE
        FROM dependency
        WHERE source_path = #{path} AND site = #{siteId}
    </delete>

    <insert id="insertItemDependencies" parameterType="java.util.Map">
        INSERT INTO dependency (site, source_path, target_path, type, valid)
        VALUES
        <foreach item="dependency" index="index" collection="dependencies"
                 open="" separator="," close="">
            (#{dependency.site}, #{dependency.sourcePath}, #{dependency.targetPath}, #{dependency.type}, #{dependency.valid})
        </foreach>
    </insert>

    <update id="invalidateDependencies">
        UPDATE dependency
        SET valid = 0
        WHERE site = #{siteId}
        AND target_path = #{path}
    </update>

    <update id="validateDependencies">
        UPDATE dependency
        SET valid = 1
        WHERE site = #{siteId}
        AND target_path = #{path}
    </update>

    <update id="validateDependenciesForSite">
        UPDATE dependency
        SET valid = (CASE WHEN target_path IN (
                        SELECT path
                        FROM item i
                        INNER JOIN site s ON s.id = i.site_id
                        WHERE s.site_id = #{siteId}
                        ) THEN 1 ELSE 0 END)
        AND site = #{siteId}
    </update>
</mapper>

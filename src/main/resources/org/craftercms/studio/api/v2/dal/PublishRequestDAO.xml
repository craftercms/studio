<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2022 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License version 3 as published by
  ~ the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.craftercms.studio.api.v2.dal.PublishRequestDAO">

    <resultMap id="PublishRequestMap" type="org.craftercms.studio.api.v2.dal.PublishRequest">
        <id property="id" column="id"/>
        <result property="site" column="site"/>
        <result property="environment" column="environment"/>
        <result property="path" column="path"/>
        <result property="oldPath" column="oldpath"/>
        <result property="user" column="username"/>
        <result property="scheduledDate" column="scheduleddate"/>
        <result property="state" column="state"/>
        <result property="action" column="action"/>
        <result property="contentTypeClass" column="contenttypeclass"/>
        <result property="submissionComment" column="submissioncomment"/>
        <result property="packageId" column="package_id"/>
        <result property="label" column="label" />
        <result property="publishedOn" column="published_on" />
    </resultMap>

    <resultMap id="PublishingPackageMap" type="org.craftercms.studio.api.v2.dal.PublishingPackage">
        <result property="packageId" column="package_id" />
        <result property="siteId" column="site" />
        <result property="environment" column="environment" />
        <result property="state" column="state" />
        <result property="scheduledDate" column="scheduleddate" />
        <result property="user" column="username" />
        <result property="comment" column="submissioncomment"/>
    </resultMap>

    <resultMap id="DashboardPublishingPackageMap"
               type="org.craftercms.studio.model.rest.dashboard.DashboardPublishingPackage">
        <id property="id" column="pr_id"/>
        <result property="packageId" column="package_id"/>
        <result property="label" column="label" />
        <result property="comment" column="submissioncomment"/>
        <result property="size" column="size" />
        <result property="publishingTarget" column="environment" />
        <result property="schedule" column="published_on" />
        <association property="submitter" resultMap="org.craftercms.studio.api.v2.dal.UserDAO.PersonMap" />
    </resultMap>

    <select id="getPublishingPackagesTotal" resultType="int">
        SELECT COUNT(distinct package_id) FROM publish_request
        WHERE site = #{siteId}
        <if test="environment != null">
            AND environment = #{environment}
        </if>
        <if test="states != null">
            AND state in
            <foreach item="state" index="index" collection="states" open="(" separator="," close=")">
                #{state}
            </foreach>
        </if>
        <if test="path != null">
            AND path RLIKE #{path}
        </if>
    </select>

    <select id="getPublishingPackages" resultMap="PublishingPackageMap">
        SELECT package_id, site, environment, state, username, scheduleddate, submissioncomment
        FROM publish_request
        WHERE site = #{siteId}
        <if test="environment != null">
            AND environment = #{environment}
        </if>
        <if test="states != null">
            AND state in
            <foreach item="state" index="index" collection="states" open="(" separator="," close=")">
                #{state}
            </foreach>
        </if>
        <if test="path != null">
            and path RLIKE #{path}
        </if>
        GROUP BY package_id
        ORDER BY published_on DESC, scheduleddate DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getPublishingPackageDetails"
            resultMap="org.craftercms.studio.api.v2.dal.PublishRequestDAO.PublishRequestMap">
        SELECT * FROM publish_request
        WHERE site = #{siteId}
        AND package_id = #{packageId}
    </select>

    <select id="getPublishingHistoryDetailTotalItems" resultType="int">
        SELECT COUNT(*) FROM publish_request
        WHERE site = #{siteId}
        AND package_id = #{packageId}
    </select>

    <select id="getPublishingHistoryDetail"
            resultMap="org.craftercms.studio.api.v2.dal.PublishRequestDAO.PublishRequestMap">
        SELECT * FROM publish_request
        WHERE site = #{siteId}
        AND package_id = #{packageId}
        LIMIT #{offset}, #{limit}
    </select>

    <update id="cancelPackages">
        UPDATE publish_request
        SET state = #{cancelledState}
        WHERE site = #{siteId}
        AND package_id IN
        <foreach item="packageId" index="index" collection="packageIds" open="(" separator="," close=")">
            #{packageId}
        </foreach>
    </update>

    <select id="getScheduledDateForEnvironment" resultType="java.time.ZonedDateTime">
        SELECT scheduleddate
        FROM publish_request
        WHERE site = #{siteId}
          AND path = #{path}
          AND state = #{state}
          AND scheduleddate &gt; #{now}
        ORDER BY scheduleddate ASC limit 0, 1
    </select>

    <select id="getDeploymentHistory" resultMap="PublishRequestMap">
        SELECT id, site, environment, path, oldpath, username, scheduleddate, state, action,
        contenttypeclass, submissioncomment, package_id, label,
        IFNULL(published_on, scheduleddate) as published_on
        FROM publish_request
        WHERE site = #{siteId}
        AND state = #{completedState}
        <if test="contentTypeClass != null" >
            AND contenttypeclass = #{contentTypeClass}
        </if>
        AND DATE(IFNULL(published_on, scheduleddate)) &lt;= DATE(#{toDate})
        AND DATE(IFNULL(published_on, scheduleddate)) &gt;= DATE(#{fromDate})
        AND environment IN
        <foreach item="env" index="index" collection="environments" open="(" separator="," close=")">
            #{env}
        </foreach>
        ORDER BY IFNULL(published_on, scheduleddate) DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getScheduledItems" resultMap="PublishRequestMap" parameterType="java.util.Map">
        SELECT *
        FROM publish_request
        WHERE site = #{siteId}
        AND state = #{state}
        <if test="contentTypeClass != null" >
            AND contenttypeclass = #{contentTypeClass}
        </if>
        AND scheduleddate &gt; #{now}
        ORDER BY scheduleddate ASC
    </select>

    <update id="cancelScheduledQueueItems" >
        UPDATE publish_request
        SET state = #{cancelledState}
        WHERE site = #{siteId}
        AND state = #{readyState}
        AND scheduleddate &gt; #{now}
        AND path IN
        <foreach item="path" index="index" collection="paths"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
    </update>

    <sql id="publishingItemsScheduledFilters">
        <where>
            pr.site = #{siteId}
            AND pr.state = #{scheduledState}
            <if test="toDate != null" >
                AND IFNULL(pr.published_on, pr.scheduleddate) &lt;= #{toDate}
            </if>
            <if test="fromDate != null">
                AND IFNULL(pr.published_on, pr.scheduleddate) &gt;= #{fromDate}
            </if>
            <if test="publishingTarget != null">
                AND pr.environment = #{publishingTarget}
            </if>
            <if test="approver != null">
                AND pr.username = #{approver}
            </if>
            <include refid="filterBySystemType"/>
        </where>
    </sql>

    <sql id="filterBySystemType">
        <if test="systemTypes != null &amp;&amp; !systemTypes.isEmpty()">
            AND pr.contenttypeclass IN
            <foreach collection="systemTypes" item="systemType" separator="," open="(" close=")">
                #{systemType}
            </foreach>
        </if>
    </sql>

    <select id="getPublishingItemsScheduledTotal" resultType="Integer">
        SELECT count(*)
        FROM publish_request pr
        <include refid="publishingItemsScheduledFilters"/>
    </select>

    <select id="getPublishingItemsScheduled" resultMap="PublishRequestMap">
        SELECT pr.*
        FROM publish_request pr
        <include refid="publishingItemsScheduledFilters"/>
        <include refid="orderBySortFields"/>
        LIMIT #{offset}, #{limit}
    </select>

    <sql id="orderBySortFields">
        <if test="sortFields != null &amp;&amp; !sortFields.isEmpty()">
            ORDER BY
            <foreach collection="sortFields" item="sortField" separator=",">
                ${sortField.field} ${sortField.order}
            </foreach>
        </if>
    </sql>


    <sql id="publishingPackagesHistoryFilters">
        <where>
            pr.site = #{siteId} AND pr.state = #{completedState}
            <if test="approver != null">
                AND pr.username = #{approver}
            </if>
            <if test="toDate != null" >
                AND IFNULL(pr.published_on, pr.scheduleddate) &lt;= #{toDate}
            </if>
            <if test="fromDate != null">
                AND IFNULL(pr.published_on, pr.scheduleddate) &gt;= #{fromDate}
            </if>
            <if test="publishingTarget != null">
                AND pr.environment = #{publishingTarget}
            </if>
        </where>
    </sql>

    <!-- This needs to use Integer instead of int because count() + GROUP BY could return null -->
    <select id="getPublishingPackagesHistoryTotal" resultType="Integer">
        SELECT COUNT(DISTINCT pr.package_id)
        FROM publish_request pr LEFT OUTER JOIN user u ON pr.username = u.username
        <include refid="publishingPackagesHistoryFilters"/>
    </select>

    <!-- Can we use <sql> to avoid repeating the WHERE from above -->
    <select id="getPublishingPackagesHistory" resultMap="DashboardPublishingPackageMap">
        SELECT pr.id as pr_id, pr.label, count(*) as size, pr.environment, pr.package_id, pr.submissioncomment,
        IFNULL(pr.published_on, pr.scheduleddate) as published_on, u.username, u.first_name, u.last_name, u.avatar
        FROM publish_request pr LEFT OUTER JOIN user u ON pr.username = u.username
        <include refid="publishingPackagesHistoryFilters"/>
        GROUP BY pr.package_id
        ORDER BY IFNULL(pr.published_on, pr.scheduleddate) DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getNumberOfPublishes" resultType="int">
        SELECT COUNT(DISTINCT path)
        FROM publish_request
        WHERE site = #{siteId}
        AND DATE(published_on) &gt;= DATE(NOW() - INTERVAL ${days} DAY)
    </select>

    <select id="getNumberOfPublishedItemsByState" resultType="int">
        SELECT COUNT(DISTINCT i.id)
        FROM activity_stream a
        LEFT JOIN site s ON s.id = a.site_id
        LEFT JOIN item i ON a.item_id = i.id
        LEFT JOIN publish_request pr ON pr.path = i.path
        WHERE a.action_timestamp &gt;= NOW() - INTERVAL ${days} DAY
        AND a.action = #{activityAction}
        AND s.site_id = #{siteId}
        AND s.deleted = 0
        AND pr.state = #{publishState} AND pr.action = #{publishAction};
    </select>
</mapper>

<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Crafter Studio Web-content authoring solution
  ~ Copyright (C) 2007-2014 Crafter Software Corporation.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.craftercms.studio.api.v1.dal.ItemStateMapper">
    <resultMap id="ItemStateMap" type="org.craftercms.studio.api.v1.dal.ItemState">
        <id property="objectId" column="object_id"/>
        <result property="site" column="site"/>
        <result property="path" column="path"/>
        <result property="state" column="state"/>
        <result property="systemProcessing" column="system_processing"/>
    </resultMap>

    <select id="getObjectStateByStates" resultSetType="FORWARD_ONLY"
            resultMap="ItemStateMap" parameterType="java.util.Map">
        SELECT object_id, site, path, state, system_processing
        FROM item_state
        WHERE state in
        <foreach item="state" index="index" collection="states"
                 open="(" separator="," close=")">
            #{state}
        </foreach>
        and site=#{site}
    </select>


    <delete id="deleteObjectState" parameterType="String">
        DELETE FROM item_state
        WHERE object_id = #{objectId}
    </delete>

    <select id="getObjectStateBySiteAndPath" parameterType="java.util.Map" resultMap="ItemStateMap">
        SELECT object_id, site, path, state, system_processing
        FROM item_state
        WHERE site = #{site} AND path = #{path}
    </select>

    <update id="setSystemProcessingBySiteAndPath" parameterType="java.util.Map" flushCache="true">
        UPDATE item_state
        SET system_processing = #{systemProcessing}
        WHERE site = #{site} AND path = #{path}
    </update>

    <update id="setSystemProcessingBySiteAndPathBulk" parameterType="java.util.Map" flushCache="true">
        UPDATE item_state
        SET system_processing = #{systemProcessing}
        WHERE site = #{site} AND path IN
        <foreach item="path" index="index" collection="paths"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
    </update>

    <insert id="insertEntry" parameterType="org.craftercms.studio.api.v1.dal.ItemState" flushCache="true">
        INSERT INTO
        item_state
        (object_id, site, path, state, system_processing)
        VALUES
        (#{objectId}, #{site}, #{path}, #{state}, 0)
    </insert>

    <update id="setObjectState" parameterType="org.craftercms.studio.api.v1.dal.ItemState" flushCache="true">
        UPDATE item_state
        SET state = #{state}, system_processing = #{systemProcessing}
        WHERE object_id = #{objectId}
    </update>

    <select id="getObjectStateForSiteAndPaths" parameterType="java.util.Map" resultMap="ItemStateMap">
        SELECT object_id, site, path, state, system_processing
        FROM item_state
        WHERE site = #{site}
        AND path in
        <foreach item="path" index="index" collection="paths"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
    </select>

    <update id="setObjectStateForSiteAndPaths" parameterType="java.util.Map" flushCache="true">
        UPDATE item_state
        SET state = #{state}
        WHERE site = #{site}
        AND path in
        <foreach item="path" index="index" collection="paths"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
    </update>

    <update id="updateObjectPath" parameterType="java.util.Map" flushCache="true">
        UPDATE item_state
        SET path = #{newPath}
        WHERE site = #{site}
        AND path = #{oldPath}
    </update>

    <delete id="deleteObjectStatesForSite" parameterType="java.util.Map" flushCache="true">
        DELETE FROM item_state
        WHERE site = #{site}
    </delete>

    <delete id="deleteObjectStateForSiteAndPath" parameterType="java.util.Map" flushCache="true">
        DELETE FROM item_state
        WHERE site = #{site}
        AND path = #{path}
    </delete>

    <delete id="deleteObjectStateForSiteAndFolder" parameterType="java.util.Map" flushCache="true">
        DELETE FROM item_state
        WHERE site = #{site}
        AND path like  #{path}
    </delete>

    <select id="isFolderLive" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(*) FROM item_state where site=#{site} and path like #{folderPath} and state like 'EXISTING%'
    </select>

    <update id="setStateForSiteContent" parameterType="org.craftercms.studio.api.v1.dal.ItemState" flushCache="true">
        UPDATE item_state
        SET state = #{state}, system_processing = 0
        WHERE site = #{siteId}
    </update>

    <select id="getChangeSetForSubtree" resultSetType="FORWARD_ONLY"
            resultMap="ItemStateMap" parameterType="java.util.Map">
        SELECT object_id, site, path, state, system_processing
        FROM item_state
        WHERE site=#{site}
        AND (path = #{path} or path like #{likepath})
        AND state in
        <foreach item="state" index="index" collection="states"
                 open="(" separator="," close=")">
            #{state}
        </foreach>
    </select>

    <select id="deletedPathExists" resultType="int" parameterType="java.util.Map">
        SELECT COUNT(1) FROM item_state
        WHERE site = #{siteId}
        AND path = #{path}
        AND state IN
        <foreach item="state" index="index" collection="states"
                 open="(" separator="," close=")">
            #{state}
        </foreach>
    </select>

    <update id="deployCommitId" parameterType="java.util.Map" flushCache="true">
        UPDATE item_state itstate INNER JOIN item_metadata itmeta ON (itstate.site = itmeta.site AND itstate.path = itmeta.path)
        SET itstate.state = #{state}, itstate.system_processing = 0
        WHERE itstate.site = #{siteId}
        AND itmeta.commit_id = #{commitId}
    </update>

    <select id="getMandatoryParentsForPublishing" parameterType="java.util.Map" resultType="String">
        SELECT is1.path as path
        FROM item_state is1
        WHERE is1.site = #{site}
        AND is1.path IN
        <foreach item="path" index="index" collection="possibleParents"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
        AND is1.state IN
        <foreach item="state" index="index" collection="newStates"
                 open="(" separator="," close=")">
            #{state}
        </foreach>
        UNION
        SELECT is2.path as path
        FROM (item_state is2 INNER JOIN item_metadata im2 ON is2.path = im2.path AND is2.site = im2.site)
        WHERE is2.site = #{site}
        AND im2.renamed > 0
        AND is2.path IN
        <foreach item="path" index="index" collection="possibleParents"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
        AND is2.state IN
        <foreach item="state" index="index" collection="editedStates"
                 open="(" separator="," close=")">
            #{state}
        </foreach>
    </select>
</mapper>
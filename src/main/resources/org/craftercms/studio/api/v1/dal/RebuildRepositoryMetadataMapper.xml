<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Crafter Studio Web-content authoring solution
  ~ Copyright (C) 2007-2016 Crafter Software Corporation.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  ~
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.craftercms.studio.api.v1.dal.RebuildRepositoryMetadataMapper">

    <update id="createRebuildRepoMetadataQueue" databaseId="derby">
        CREATE TABLE cstudio_rebuildrepositorymetadata (
          id BIGINT NOT NULL GENERATED ALWAYS AS IDENTITY ( START WITH 1, INCREMENT BY 1),
          site VARCHAR(255) NOT NULL,
          path VARCHAR(2000) NOT NULL,
          processed INT NOT NULL DEFAULT 0
        )
    </update>

    <update id="createRebuildRepoMetadataQueue" databaseId="oracle">
        CREATE TABLE cs_rebuildrepometadata (
        id NUMBER (19, 0) NOT NULL PRIMARY KEY,
        site VARCHAR(255) NOT NULL,
        path VARCHAR(2000) NOT NULL,
        processed INT DEFAULT ON NULL 0
        )
    </update>

    <update id="createRebuildRepoMetadataQueue" databaseId="postgres">
        CREATE TABLE cstudio_rebuildrepositorymetadata (
          id serial NOT NULL,
          site character varying(255) not null,
          path text not null,
          processed int not null default 0,
          CONSTRAINT cstudio_rebuildrepositorymetadata_pk PRIMARY KEY (id)
        )
    </update>

    <update id="createRebuildRepoMetadataQueue">
        create table if not exists cstudio_rebuildrepositorymetadata(
        `id` BIGINT(20) NOT NULL AUTO_INCREMENT,
        `site` VARCHAR(255) NOT NULL,
        `path` VARCHAR(2000) NOT NULL,
        `processed` int not null default 0,
        PRIMARY KEY (`id`),
        KEY `cstudio_rebuildrepositorymetadata_site_idx` (`site`)
        )
        ENGINE =InnoDB
        DEFAULT CHARSET =utf8
        ROW_FORMAT=DYNAMIC
    </update>

    <delete id="deleteRebuildRepoMetadataQueue" databaseId="oracle">
        drop table cs_rebuildrepometadata
    </delete>

    <delete id="deleteRebuildRepoMetadataQueue">
        drop table cstudio_rebuildrepositorymetadata
    </delete>

    <insert id="insertRebuildRepoMetadataQueue" parameterType="Map" databaseId="oracle">
        insert all
        <foreach collection="pathList" item="pathItem" separator=" " index="idx">
            into cs_rebuildrepometadata (id, site, path, processed) values (#{id} + #{idx}, #{site}, #{pathItem}, 0)
        </foreach>
        select * from dual
    </insert>
    
    <insert id="insertRebuildRepoMetadataQueue" parameterType="Map">
        insert into cstudio_rebuildrepositorymetadata (site, path, processed) values
        <foreach collection="pathList" item="pathItem" separator=",">
            (#{site}, #{pathItem}, 0)
        </foreach>
    </insert>

    <select id="getNextBatchFromQueue" resultType="HashMap" databaseId="mysql">
        select * from cstudio_rebuildrepositorymetadata where site = #{site} and processed = 0 limit #{batchSize}
    </select>

    <select id="getNextBatchFromQueue" resultType="HashMap" databaseId="derby">
        select id as "id", site as "site", path as "path", processed as "processed" from cstudio_rebuildrepositorymetadata where site = #{site} and processed = 0 fetch next #{batchSize} rows only
    </select>

    <select id="getNextBatchFromQueue" resultType="HashMap" databaseId="sqlserver">
        select top (#{batchSize}) * from cstudio_rebuildrepositorymetadata where site = #{site} and processed = 0
    </select>

    <select id="getNextBatchFromQueue" resultType="HashMap" databaseId="oracle">
        select id as "id", site as "site", path as "path", processed as "processed" from (
          select * from cs_rebuildrepometadata where site = #{site} and processed = 0
        )
        where rownum between 0 and #{batchSize}

    </select>

    <update id="markProcessed" databaseId="oracle">
        update cs_rebuildrepometadata set processed = 1 where site = #{site} and path = #{path}
    </update>

    <update id="markProcessed">
        update cstudio_rebuildrepositorymetadata set processed = 1 where site = #{site} and path = #{path}
    </update>
</mapper>

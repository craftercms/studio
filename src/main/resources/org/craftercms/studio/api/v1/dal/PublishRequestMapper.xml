<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2007-2022 Crafter Software Corporation. All Rights Reserved.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License version 3 as published by
  ~ the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.craftercms.studio.api.v1.dal.PublishRequestMapper">

    <resultMap id="PublishRequestMap" type="org.craftercms.studio.api.v1.dal.PublishRequest">
        <id property="id" column="id"/>
        <result property="site" column="site"/>
        <result property="environment" column="environment"/>
        <result property="path" column="path"/>
        <result property="oldPath" column="oldpath"/>
        <result property="user" column="username"/>
        <result property="scheduledDate" column="scheduleddate"/>
        <result property="state" column="state"/>
        <result property="action" column="action"/>
        <result property="contentTypeClass" column="contenttypeclass"/>
        <result property="submissionComment" column="submissioncomment"/>
        <result property="commitId" column="commit_id"/>
        <result property="packageId" column="package_id"/>
    </resultMap>

    <insert id="insertItemForDeployment" parameterType="org.craftercms.studio.api.v1.dal.PublishRequest">
        INSERT INTO publish_request (site, environment, path, oldpath, username, scheduleddate, state, action,
        contenttypeclass, submissioncomment, commit_id, package_id)
        values (#{site}, #{environment}, #{path}, #{oldPath}, #{user}, #{scheduledDate}, #{state}, #{action},
        #{contentTypeClass}, #{submissionComment}, #{commitId}, #{packageId})
    </insert>

    <update id="cancelWorkflow" parameterType="java.util.Map">
        UPDATE publish_request
        SET state = #{canceledState}
        WHERE site = #{site}
        AND path = #{path}
        AND state = #{state}
        AND scheduleddate &gt; #{now}
    </update>

    <update id="cancelWorkflowBulk" parameterType="java.util.Map">
        UPDATE publish_request
        SET state = #{canceledState}
        WHERE site = #{site}
        AND state = #{state}
        AND scheduleddate &gt; #{now}
        AND path IN
        <foreach item="path" index="index" collection="paths"
                 open="(" separator="," close=")">
            #{path}
        </foreach>
    </update>

    <select id="getItemsReadyForDeployment" resultMap="PublishRequestMap">
        SELECT *
        FROM publish_request
        WHERE site = #{site}
        AND state = #{state}
        AND environment = #{environment}
        AND scheduleddate &lt;= #{now}
        ORDER BY scheduleddate ASC
    </select>

    <update id="updateItemDeploymentState" parameterType="org.craftercms.studio.api.v1.dal.PublishRequest">
        UPDATE publish_request
        SET state = #{state}, published_on = NULL
        WHERE id = #{id}
    </update>

    <update id="markItemCompleted" parameterType="org.craftercms.studio.api.v1.dal.PublishRequest">
        UPDATE publish_request
        SET state = #{state}, published_on = #{publishedOn}
        WHERE id = #{id}
    </update>

    <delete id="deleteDeploymentDataForSite" parameterType="java.util.Map">
        DELETE FROM publish_request
        WHERE site = #{site}
    </delete>

    <select id="checkPublishingStatus" resultMap="PublishRequestMap">
        SELECT *
        FROM publish_request
        WHERE site = #{site}
        AND scheduleddate &lt;= #{now}
        AND state in
        <foreach item="state" index="index" collection="states"
                 open="(" separator="," close=")">
            #{state}
        </foreach>
        ORDER BY scheduleddate ASC
        LIMIT 0, 1
    </select>

    <select id="isPublishingBlocked" resultType="int">
        SELECT count(1)
        FROM publish_request
        WHERE site = #{site}
        AND scheduleddate &lt;= #{now}
        AND state = #{state}
        ORDER BY scheduleddate ASC
        LIMIT 0, 1
    </select>

    <select id="checkItemQueued" resultType="int" parameterType="java.util.Map">
        SELECT count(1)
        FROM publish_request
        WHERE site = #{site_id}
        AND environment = #{environment}
        AND path = #{path}
        AND state = #{state}
        AND commit_id = #{commitId}
    </select>

    <select id="isPublishingQueueEmpty" resultType="int">
        SELECT count(1)
        FROM publish_request
        WHERE site = #{site}
        AND scheduleddate &gt;= #{now}
        AND state = #{state}
        ORDER BY scheduleddate ASC
    </select>

    <update id="resetProcessingQueue" parameterType="java.util.Map">
        UPDATE publish_request
        SET state = #{readyState}
        WHERE site = #{siteId}
        AND environment = #{environment}
        AND state = #{processingState}
    </update>
</mapper>